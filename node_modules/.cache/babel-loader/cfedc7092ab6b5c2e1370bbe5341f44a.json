{"ast":null,"code":"export default {\n  data() {\n    return {\n      selectedService: \"\",\n      inputQuantity: \"\",\n      inputReceiptAmount: \" \",\n      invoiceId: \"\",\n      cashier: \"Win Win Maw\",\n      services: [{\n        id: 1,\n        name: \"Web Design\",\n        price: 100\n      }, {\n        id: 2,\n        name: \"domain service\",\n        price: 10\n      }, {\n        id: 3,\n        name: \"SSL\",\n        price: 5\n      }, {\n        id: 4,\n        name: \"maintenance\",\n        price: 50\n      }],\n      recordStart: 1,\n      records: [],\n      hasError: true,\n      errorColor: \"text-danger\"\n    };\n  },\n\n  computed: {\n    invoiceNumber() {\n      let d = new Date();\n      let dateCode = d.getDate() + \"\" + (d.getMonth() + 1) + \"\" + d.getFullYear();\n      let random = Math.floor(Math.random() * 10000);\n      this.invoiceId = dateCode + \"-\" + random;\n      return dateCode + \"-\" + random;\n    },\n\n    refundAmount() {\n      let total = this.records.reduce((pv, cv) => pv + cv.cost, 0);\n      let refund = total - this.inputReceiptAmount;\n      return refund;\n    }\n\n  },\n  methods: {\n    saveRecord() {\n      let currentService = this.services.find(service => service.id === this.selectedService);\n      let cost = currentService.price * this.inputQuantity;\n      let record = {\n        id: this.recordStart,\n        service: currentService,\n        quantity: this.inputQuantity,\n        cost\n      };\n      this.records.push(record);\n      this.selectedService = this.inputQuantity = \"\";\n      this.recordStart++;\n    },\n\n    del(recordId) {\n      this.records = this.records.filter(record => record.id != recordId);\n      console.log(recordId);\n    },\n\n    toPrint() {\n      print();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA2IA,eAAe;AACbA,MAAI,GAAG;AACL,WAAO;AACLC,qBAAe,EAAC,EADX;AAELC,mBAAa,EAAC,EAFT;AAGLC,wBAAkB,EAAE,GAHf;AAILC,eAAQ,EAAI,EAJP;AAKLC,aAAM,EAAI,aALL;AAMLC,cAAQ,EAAE,CACR;AACEC,UAAE,EAAC,CADL;AAEEC,YAAG,EAAI,YAFT;AAGEC,aAAI,EAAI;AAHV,OADQ,EAMR;AACEF,UAAE,EAAC,CADL;AAEEC,YAAG,EAAI,gBAFT;AAGEC,aAAK,EAAE;AAHT,OANQ,EAWR;AACEF,UAAE,EAAC,CADL;AAEEC,YAAI,EAAE,KAFR;AAGEC,aAAK,EAAE;AAHT,OAXQ,EAgBR;AACEF,UAAE,EAAC,CADL;AAEEC,YAAI,EAAE,aAFR;AAGEC,aAAK,EAAE;AAHT,OAhBQ,CANL;AA4BLC,iBAAU,EAAI,CA5BT;AA6BLC,aAAM,EAAI,EA7BL;AA8BLC,cAAO,EAAI,IA9BN;AA+BLC,gBAAS,EAAI;AA/BR,KAAP;AAkCD,GApCY;;AAqCbC,UAAQ,EAAE;AACRC,iBAAa,GAAG;AACd,UAAIC,IAAI,IAAIC,IAAJ,EAAR;AACA,UAAIC,QAAO,GAAIF,CAAC,CAACG,OAAF,KAAY,EAAZ,IAAgBH,CAAC,CAACI,QAAF,KAAa,CAA7B,IAAgC,EAAhC,GAAmCJ,CAAC,CAACK,WAAF,EAAlD;AACA,UAAIC,MAAK,GAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAc,KAAzB,CAAb;AACA,WAAKlB,SAAL,GAAiBc,QAAQ,GAAC,GAAT,GAAaI,MAA9B;AACA,aAAOJ,QAAQ,GAAC,GAAT,GAAaI,MAApB;AACD,KAPO;;AAQRG,gBAAY,GAAE;AACZ,UAAIC,KAAI,GAAI,KAAKf,OAAL,CAAagB,MAAb,CAAoB,CAACC,EAAD,EAAIC,EAAJ,KAASD,EAAE,GAACC,EAAE,CAACC,IAAnC,EAAwC,CAAxC,CAAZ;AACA,UAAIC,MAAK,GAAIL,KAAI,GAAI,KAAKvB,kBAA1B;AACA,aAAO4B,MAAP;AACD;;AAZO,GArCG;AAmDbC,SAAO,EAAE;AACPC,cAAU,GAAG;AACX,UAAIC,cAAa,GAAI,KAAK5B,QAAL,CAAc6B,IAAd,CAAmBC,OAAO,IAAEA,OAAO,CAAC7B,EAAR,KAAa,KAAKN,eAA9C,CAArB;AACA,UAAI6B,IAAG,GAAII,cAAc,CAACzB,KAAf,GAAuB,KAAKP,aAAvC;AACA,UAAImC,MAAK,GAAI;AACX9B,UAAC,EAAI,KAAKG,WADC;AAEX0B,eAAM,EAAIF,cAFC;AAGXI,gBAAO,EAAI,KAAKpC,aAHL;AAIX4B;AAJW,OAAb;AAMA,WAAKnB,OAAL,CAAa4B,IAAb,CAAkBF,MAAlB;AACA,WAAKpC,eAAL,GAAuB,KAAKC,aAAL,GAAqB,EAA5C;AACA,WAAKQ,WAAL;AACD,KAbM;;AAcP8B,OAAG,CAACC,QAAD,EAAU;AACX,WAAK9B,OAAL,GAAe,KAAKA,OAAL,CAAa+B,MAAb,CAAoBL,MAAK,IAAKA,MAAM,CAAC9B,EAAP,IAAakC,QAA3C,CAAf;AACAE,aAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,KAjBM;;AAmBPI,WAAO,GAAE;AACPC,WAAK;AACP;;AArBO;AAnDI,CAAf","names":["data","selectedService","inputQuantity","inputReceiptAmount","invoiceId","cashier","services","id","name","price","recordStart","records","hasError","errorColor","computed","invoiceNumber","d","Date","dateCode","getDate","getMonth","getFullYear","random","Math","floor","refundAmount","total","reduce","pv","cv","cost","refund","methods","saveRecord","currentService","find","service","record","quantity","push","del","recordId","filter","console","log","toPrint","print"],"sourceRoot":"","sources":["C:\\Users\\winwinmaw\\Desktop\\vue-invoice-app\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <h3 class=\"text-center my-3 text-primary\">\r\n          Invoice Maker\r\n          <a href=\"\" target=\"_blank\">\r\n            <i class=\"fa fa-file-circle-plus\"></i>\r\n          </a>\r\n        </h3>\r\n        <div class=\"w-100\">\r\n          <table class=\"table table-borderless\">\r\n            <thead>\r\n            <tr>\r\n              <th>Invoice No : </th>\r\n              <th>Date : </th>\r\n              <th> Cashier : </th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr>\r\n              <td>{{invoiceId}}</td>\r\n              <td>{{ Date() }}</td>\r\n              <td>\r\n                {{ cashier }}\r\n              </td>\r\n\r\n            </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n        </div>\r\n        <form class=\"hide-in-print\" action=\"\" @submit.prevent=\"saveRecord\">\r\n          <div class=\"row g-2\">\r\n            <div class=\"col-6\">\r\n              <select v-model=\"selectedService\" class=\"form-select\">\r\n                <option value=\"\" >Select Service</option>\r\n                <option v-for=\"service in services\" :value=\"service.id\" :key=\"service.id\">\r\n                  {{ service.name }}\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <input type=\"number\" v-model=\"inputQuantity\" class=\"form-control\" placeholder=\"Quantity\">\r\n            </div>\r\n            <div class=\"col-2\">\r\n              <button class=\"btn btn-primary w-100\">\r\n                <i class=\"fa-solid fa-plus\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n        <table class=\"table table-bordered align-middle  mt-3\">\r\n          <thead>\r\n          <tr>\r\n            <th class=\"text-center\">#</th>\r\n            <th>Service</th>\r\n            <th>Quantity</th>\r\n            <th>Unit Price</th>\r\n            <th>Cost</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr>\r\n            <td v-if=\"records.length === 0\" colspan=\"5\" class=\"text-center\">No record</td>\r\n          </tr>\r\n          <tr class=\"animate__animated animate__fadeInDown\" v-for=\"(record,index) in records\" :key=\"record.id\">\r\n            <td class=\"text-center\">\r\n              <input type=\"hidden\" :value=\"record.id\">\r\n              <span class=\"show-in-print\">{{ index+1 }}</span>\r\n              <i  @click=\"del(record.id)\" class=\"fa-solid fa-trash-alt text-danger hide-in-print\"></i>\r\n            </td>\r\n            <td>{{ record.service.name }}</td>\r\n            <td class=\"text-end\">{{ record.quantity }}</td>\r\n            <td class=\"text-end\">{{ record.service.price }}</td>\r\n            <td class=\"text-end\">{{ record.cost }}</td>\r\n          </tr>\r\n          </tbody>\r\n          <tfoot>\r\n          <tr v-if=\"records.length > 0\">\r\n            <td class=\"text-end\" colspan=\"2\">TotalQty</td>\r\n            <td class=\"text-end\">{{ records.reduce((pv,cv)=>pv+cv.quantity,0) }}</td>\r\n            <td class=\"text-end\">Total</td>\r\n            <td class=\"text-end\">{{ records.reduce((pv,cv)=>pv+cv.cost,0) }}</td>\r\n          </tr>\r\n          </tfoot>\r\n        </table>\r\n\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-12 col-md-4\">\r\n              <table class=\"table table-borderless table-sm \">\r\n                <tbody class=\"align-middle\">\r\n                  <tr class=\"\">\r\n                    <th class=\"fw-normal text-black-50\" style=\"width: 150px;\">Net Amount : </th>\r\n                    <td class=\"ms-2\">{{records.reduce((pv,cv)=>pv+cv.cost,0)}}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th class=\"fw-normal text-black-50\">Receipt Amount : </th>\r\n                    <td>\r\n                      <input type=\"number\" v-model=\"inputReceiptAmount\" class=\"form-control\" placeholder=\"\" >\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th class=\"fw-normal text-black-50\">Refund Amount : </th>\r\n                    <td :class=\"{errorColor:hasError}\">{{ refundAmount }}<i class=\"fa fa-circle-exclamation\"></i></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n        <div class=\"row g-2 mt-3 hide-in-print\">\r\n          <div class=\"col-6\">\r\n            <input v-model=\"invoiceNumber\" class=\"form-control\">\r\n          </div>\r\n          <div class=\"col\">\r\n            <button @click=\"toPrint()\" class=\"btn btn-primary w-100\">\r\n              <i class=\"fa-solid fa-print fa-fw\"></i>\r\n              Print\r\n            </button>\r\n          </div>\r\n          <div class=\"col\">\r\n            <button @click=\"toPrint()\" class=\"btn btn-primary w-100\">\r\n              <i class=\"fa-solid fa-file fa-fw\"></i>\r\n              Save\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedService:\"\",\r\n      inputQuantity:\"\",\r\n      inputReceiptAmount: \" \",\r\n      invoiceId : \"\",\r\n      cashier : \"Win Win Maw\",\r\n      services: [\r\n        {\r\n          id:1,\r\n          name : \"Web Design\",\r\n          price : 100,\r\n        },\r\n        {\r\n          id:2,\r\n          name : \"domain service\",\r\n          price: 10\r\n        },\r\n        {\r\n          id:3,\r\n          name: \"SSL\",\r\n          price: 5\r\n        },\r\n        {\r\n          id:4,\r\n          name: \"maintenance\",\r\n          price: 50\r\n        }\r\n      ],\r\n      recordStart : 1,\r\n      records : [],\r\n      hasError : true,\r\n      errorColor : \"text-danger\"\r\n\r\n    }\r\n  },\r\n  computed: {\r\n    invoiceNumber() {\r\n      let d = new Date();\r\n      let dateCode = d.getDate()+\"\"+(d.getMonth()+1)+\"\"+d.getFullYear()\r\n      let random = Math.floor(Math.random()*10000);\r\n      this.invoiceId = dateCode+\"-\"+random;\r\n      return dateCode+\"-\"+random;\r\n    },\r\n    refundAmount(){\r\n      let total = this.records.reduce((pv,cv)=>pv+cv.cost,0);\r\n      let refund = total - this.inputReceiptAmount;\r\n      return refund;\r\n    },\r\n  },\r\n  methods: {\r\n    saveRecord() {\r\n      let currentService = this.services.find(service=>service.id===this.selectedService);\r\n      let cost = currentService.price * this.inputQuantity;\r\n      let record = {\r\n        id : this.recordStart,\r\n        service : currentService,\r\n        quantity : this.inputQuantity,\r\n        cost\r\n      }\r\n      this.records.push(record);\r\n      this.selectedService = this.inputQuantity = \"\"\r\n      this.recordStart++\r\n    },\r\n    del(recordId){\r\n      this.records = this.records.filter(record => record.id != recordId)\r\n      console.log(recordId)\r\n    },\r\n\r\n    toPrint(){\r\n      print();\r\n    }\r\n\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@300;400;700&display=swap');\r\n$font-family-sans-serif : 'Oswald', sans-serif;\r\n$primary: #810fc7;\r\n\r\n@import \"~bootstrap/scss/bootstrap\";\r\n@import \"~@fortawesome/fontawesome-free/css/all.min.css\";\r\n@import \"~animate.css/animate.min.css\";\r\n\r\n@media screen {\r\n  .show-in-print {\r\n    display: none;\r\n  }\r\n  .text-danger{\r\n    color: orangered;\r\n  }\r\n}\r\n@media print {\r\n  .hide-in-print{\r\n    display: none !important;\r\n  }\r\n  .show-in-print{\r\n    display: block;\r\n  }\r\n  input{\r\n    border:none !important;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}